{"ast":null,"code":"const companyDetails = {\n  org: \"Siemens\",\n  designation: \"Software Engineer\",\n  tenure: \"Sept 2021 - Present\",\n  location: \"Gurugram, Haryana, India\"\n};\nconst frontendCardData = {\n  title: \"Frontend Development\",\n  items: [{\n    id: 1,\n    text: \"Developed dynamic and responsive UIs using React, JavaScript, and TypeScript, integrating them with backend APIs.\"\n  }, {\n    id: 2,\n    text: \"Designed a device monitoring and visualization screen using Chart.js for real-time IoT data, improving user insights.\"\n  }, {\n    id: 3,\n    text: \"Led efforts to increase UI test coverage from 52% to 85%, addressing SonarQube issues for code quality improvements.\"\n  }, {\n    id: 4,\n    text: \"Suggested and implemented React Hook Form and Zod for handling complex forms and validations, replacing Formik and Yup for better performance and simplicity.\"\n  }]\n};\nconst backendCardData = {\n  title: \"Backend Development\",\n  items: [{\n    id: 1,\n    text: \"Developed and maintained mgc-gateway and EMS backend applications using Java Spring Boot.\"\n  }, {\n    id: 2,\n    text: \"Integrated OPC UA protocol to communicate with ctrlX core IoT devices, handling real-time time-series data.\"\n  }, {\n    id: 3,\n    text: \"Stored time-series data in InfluxDB and user data in MySQL to ensure efficient database management.\"\n  }, {\n    id: 4,\n    text: \"Built and secured APIs using Spring Security and implemented custom Spring Filters for enhanced security.\"\n  }, {\n    id: 5,\n    text: \"Developed GraphQL APIs for multiple microservices, optimizing data access and providing robust endpoints to the frontend.\"\n  }]\n};\nconst snapContainerCardData = {\n  title: \"Snap Container Expertise\",\n  items: [{\n    id: 1,\n    text: \"Created Snap containers for ctrlX core IoT devices, successfully converting Docker-based applications to Snap for deployment.\"\n  }, {\n    id: 2,\n    text: \"Developed a Snap container app to handle real-time data publication from the ctrlX data layer to AWS IoT Core using MQTT.\"\n  }, {\n    id: 3,\n    text: \"Managed real-time subscribe/unsubscribe functionality based on user input from a tree view, enabling dynamic data handling.\"\n  }, {\n    id: 4,\n    text: \"Addressed critical Snap application functionalities like handling connection loss and ensuring uninterrupted data transmission.\"\n  }]\n};\nconst cloudAndRealTimeDataProcessingCardData = {\n  title: \"Cloud & Real-Time Data Processing\",\n  items: [{\n    id: 1,\n    text: \"Integrated AWS IoT Core and Apache Flink for real-time data streaming, writing data to AWS Timestream DB.\"\n  }, {\n    id: 2,\n    text: \"Conducted a PoC to replace the MQTT pub-sub model with gRPC, significantly improving the real-time data processing and reducing latency.\"\n  }, {\n    id: 3,\n    text: \"Deployed gRPC clients on ctrlX core IoT devices and set up servers for processing time-series data, storing it in InfluxDB for further analysis.\"\n  }]\n};\nconst listOfSkills = [frontendCardData, backendCardData, snapContainerCardData, cloudAndRealTimeDataProcessingCardData];\nexport const siemensOrgData = {\n  companyDetails: companyDetails,\n  listOfSkills: listOfSkills\n};","map":{"version":3,"names":["companyDetails","org","designation","tenure","location","frontendCardData","title","items","id","text","backendCardData","snapContainerCardData","cloudAndRealTimeDataProcessingCardData","listOfSkills","siemensOrgData"],"sources":["/Users/vinodjatav/Desktop/Developement/vinodjatav.github.io/src/Components/RightPannel/Home/SkillsData/SiemensOrgData.ts"],"sourcesContent":["import { CompanyDetailsModel, ItemCard } from \"../../../../Models/Models\";\n\nconst companyDetails: CompanyDetailsModel = {\n  org: \"Siemens\",\n  designation: \"Software Engineer\",\n  tenure: \"Sept 2021 - Present\",\n  location: \"Gurugram, Haryana, India\",\n};\n\nconst frontendCardData: ItemCard = {\n  title: \"Frontend Development\",\n  items: [\n    {\n      id: 1,\n      text: \"Developed dynamic and responsive UIs using React, JavaScript, and TypeScript, integrating them with backend APIs.\",\n    },\n    {\n      id: 2,\n      text: \"Designed a device monitoring and visualization screen using Chart.js for real-time IoT data, improving user insights.\",\n    },\n    {\n      id: 3,\n      text: \"Led efforts to increase UI test coverage from 52% to 85%, addressing SonarQube issues for code quality improvements.\",\n    },\n    {\n      id: 4,\n      text: \"Suggested and implemented React Hook Form and Zod for handling complex forms and validations, replacing Formik and Yup for better performance and simplicity.\",\n    },\n  ],\n};\n\nconst backendCardData: ItemCard = {\n  title: \"Backend Development\",\n  items: [\n    {\n      id: 1,\n      text: \"Developed and maintained mgc-gateway and EMS backend applications using Java Spring Boot.\",\n    },\n    {\n      id: 2,\n      text: \"Integrated OPC UA protocol to communicate with ctrlX core IoT devices, handling real-time time-series data.\",\n    },\n    {\n      id: 3,\n      text: \"Stored time-series data in InfluxDB and user data in MySQL to ensure efficient database management.\",\n    },\n    {\n      id: 4,\n      text: \"Built and secured APIs using Spring Security and implemented custom Spring Filters for enhanced security.\",\n    },\n    {\n      id: 5,\n      text: \"Developed GraphQL APIs for multiple microservices, optimizing data access and providing robust endpoints to the frontend.\",\n    },\n  ],\n};\n\nconst snapContainerCardData: ItemCard = {\n  title: \"Snap Container Expertise\",\n  items: [\n    {\n      id: 1,\n      text: \"Created Snap containers for ctrlX core IoT devices, successfully converting Docker-based applications to Snap for deployment.\",\n    },\n    {\n      id: 2,\n      text: \"Developed a Snap container app to handle real-time data publication from the ctrlX data layer to AWS IoT Core using MQTT.\",\n    },\n    {\n      id: 3,\n      text: \"Managed real-time subscribe/unsubscribe functionality based on user input from a tree view, enabling dynamic data handling.\",\n    },\n    {\n      id: 4,\n      text: \"Addressed critical Snap application functionalities like handling connection loss and ensuring uninterrupted data transmission.\",\n    },\n  ],\n};\n\nconst cloudAndRealTimeDataProcessingCardData: ItemCard = {\n  title: \"Cloud & Real-Time Data Processing\",\n  items: [\n    {\n      id: 1,\n      text: \"Integrated AWS IoT Core and Apache Flink for real-time data streaming, writing data to AWS Timestream DB.\",\n    },\n    {\n      id: 2,\n      text: \"Conducted a PoC to replace the MQTT pub-sub model with gRPC, significantly improving the real-time data processing and reducing latency.\",\n    },\n    {\n      id: 3,\n      text: \"Deployed gRPC clients on ctrlX core IoT devices and set up servers for processing time-series data, storing it in InfluxDB for further analysis.\",\n    },\n  ],\n};\n\nconst listOfSkills: ItemCard[] = [frontendCardData, backendCardData, snapContainerCardData, cloudAndRealTimeDataProcessingCardData];\n\nexport const siemensOrgData = {\n  companyDetails: companyDetails,\n  listOfSkills: listOfSkills\n}\n"],"mappings":"AAEA,MAAMA,cAAmC,GAAG;EAC1CC,GAAG,EAAE,SAAS;EACdC,WAAW,EAAE,mBAAmB;EAChCC,MAAM,EAAE,qBAAqB;EAC7BC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,gBAA0B,GAAG;EACjCC,KAAK,EAAE,sBAAsB;EAC7BC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,MAAMC,eAAyB,GAAG;EAChCJ,KAAK,EAAE,qBAAqB;EAC5BC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,MAAME,qBAA+B,GAAG;EACtCL,KAAK,EAAE,0BAA0B;EACjCC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,MAAMG,sCAAgD,GAAG;EACvDN,KAAK,EAAE,mCAAmC;EAC1CC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,MAAMI,YAAwB,GAAG,CAACR,gBAAgB,EAAEK,eAAe,EAAEC,qBAAqB,EAAEC,sCAAsC,CAAC;AAEnI,OAAO,MAAME,cAAc,GAAG;EAC5Bd,cAAc,EAAEA,cAAc;EAC9Ba,YAAY,EAAEA;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}