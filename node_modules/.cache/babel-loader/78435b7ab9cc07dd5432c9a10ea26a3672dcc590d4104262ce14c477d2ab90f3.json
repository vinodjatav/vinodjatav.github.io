{"ast":null,"code":"import CircleIcon from\"@mui/icons-material/Circle\";import{Box,Typography}from\"@mui/material\";import Checkbox from\"@mui/material/Checkbox\";import React from\"react\";import localization from\"../../localization.json\";import{CheckCircleIcon}from\"../../Icons/Icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const style={stroke:\"#ffffff\",strokeWidth:1,width:\"32px\",height:\"32px\"};const colorList=[\"rgba(107, 67, 229, 0.80)\",\"rgba(161, 67, 229, 0.80)\",\"rgba(67, 143, 229, 0.80)\",\"rgba(89, 229, 67, 0.80)\",\"rgba(229, 186, 67, 0.80)\",\"rgba(229, 94, 67, 0.80)\",\"rgba(229, 67, 67, 0.80)\"];const ColorPalettes=props=>{const{setSelectedBackground}=props;const[selectedBackgroundColor,setSelectedBackgroundColor]=React.useState(\"rgba(67, 143, 229, 0.80)\");const handleClick=color=>{setSelectedBackgroundColor(color);setSelectedBackground(color);};return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",sx:{background:\"#ffffff15\",textAlign:\"start\",borderRadius:\"16px\",padding:\"24px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:\"#fff\",marginLeft:\"16px\"},children:localization[\"set-your-vibes\"]}),/*#__PURE__*/_jsx(Box,{display:\"grid\",gridTemplateColumns:\"repeat(4, 1fr)\",children:colorList.map(color=>/*#__PURE__*/_jsx(Checkbox,{checked:color===selectedBackgroundColor,onClick:()=>{handleClick(color);},icon:/*#__PURE__*/_jsx(CircleIcon,{style:{color:color},sx:style}),checkedIcon:/*#__PURE__*/_jsx(CheckCircleIcon,{style:{color:color},sx:style})},color))})]});};export default ColorPalettes;","map":{"version":3,"names":["CircleIcon","Box","Typography","Checkbox","React","localization","CheckCircleIcon","jsx","_jsx","jsxs","_jsxs","style","stroke","strokeWidth","width","height","colorList","ColorPalettes","props","setSelectedBackground","selectedBackgroundColor","setSelectedBackgroundColor","useState","handleClick","color","display","flexDirection","sx","background","textAlign","borderRadius","padding","children","variant","marginLeft","gridTemplateColumns","map","checked","onClick","icon","checkedIcon"],"sources":["/Users/vinodjatav/Desktop/Developement/vinodjatav.github.io/src/Components/LeftPannel/ColorPalettes.tsx"],"sourcesContent":["import CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport React from \"react\";\r\nimport localization from \"../../localization.json\";\r\nimport { CheckCircleIcon } from \"../../Icons/Icons\";\r\n\r\nconst style = {\r\n  stroke: \"#ffffff\",\r\n  strokeWidth: 1,\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n};\r\n\r\nconst colorList = [\r\n  \"rgba(107, 67, 229, 0.80)\",\r\n  \"rgba(161, 67, 229, 0.80)\",\r\n  \"rgba(67, 143, 229, 0.80)\",\r\n  \"rgba(89, 229, 67, 0.80)\",\r\n  \"rgba(229, 186, 67, 0.80)\",\r\n  \"rgba(229, 94, 67, 0.80)\",\r\n  \"rgba(229, 67, 67, 0.80)\",\r\n];\r\n\r\ninterface propType {\r\n  setSelectedBackground: Function;\r\n}\r\n\r\nconst ColorPalettes = (props: propType) => {\r\n  const { setSelectedBackground } = props;\r\n  const [selectedBackgroundColor, setSelectedBackgroundColor] =\r\n    React.useState(\"rgba(67, 143, 229, 0.80)\");\r\n\r\n  const handleClick = (color: string) => {\r\n    setSelectedBackgroundColor(color);\r\n    setSelectedBackground(color);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      sx={{\r\n        background: \"#ffffff15\",\r\n        textAlign: \"start\",\r\n        borderRadius: \"16px\",\r\n        padding: \"24px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"body2\" sx={{ color: \"#fff\", marginLeft: \"16px\" }}>\r\n        {localization[\"set-your-vibes\"]}\r\n      </Typography>\r\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(4, 1fr)\">\r\n        {colorList.map((color) => (\r\n          <Checkbox\r\n            key={color}\r\n            checked={color === selectedBackgroundColor}\r\n            onClick={() => {\r\n              handleClick(color);\r\n            }}\r\n            icon={<CircleIcon style={{ color: color }} sx={style} />}\r\n            checkedIcon={\r\n              <CheckCircleIcon style={{ color: color }} sx={style} />\r\n            }\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPalettes;\r\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,4BAA4B,CACnD,OAASC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAC/C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAClD,OAASC,eAAe,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,KAAK,CAAG,CACZC,MAAM,CAAE,SAAS,CACjBC,WAAW,CAAE,CAAC,CACdC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MACV,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,CAChB,0BAA0B,CAC1B,0BAA0B,CAC1B,0BAA0B,CAC1B,yBAAyB,CACzB,0BAA0B,CAC1B,yBAAyB,CACzB,yBAAyB,CAC1B,CAMD,KAAM,CAAAC,aAAa,CAAIC,KAAe,EAAK,CACzC,KAAM,CAAEC,qBAAsB,CAAC,CAAGD,KAAK,CACvC,KAAM,CAACE,uBAAuB,CAAEC,0BAA0B,CAAC,CACzDjB,KAAK,CAACkB,QAAQ,CAAC,0BAA0B,CAAC,CAE5C,KAAM,CAAAC,WAAW,CAAIC,KAAa,EAAK,CACrCH,0BAA0B,CAACG,KAAK,CAAC,CACjCL,qBAAqB,CAACK,KAAK,CAAC,CAC9B,CAAC,CAED,mBACEd,KAAA,CAACT,GAAG,EACFwB,OAAO,CAAC,MAAM,CACdC,aAAa,CAAC,QAAQ,CACtBC,EAAE,CAAE,CACFC,UAAU,CAAE,WAAW,CACvBC,SAAS,CAAE,OAAO,CAClBC,YAAY,CAAE,MAAM,CACpBC,OAAO,CAAE,MACX,CAAE,CAAAC,QAAA,eAEFxB,IAAA,CAACN,UAAU,EAAC+B,OAAO,CAAC,OAAO,CAACN,EAAE,CAAE,CAAEH,KAAK,CAAE,MAAM,CAAEU,UAAU,CAAE,MAAO,CAAE,CAAAF,QAAA,CACnE3B,YAAY,CAAC,gBAAgB,CAAC,CACrB,CAAC,cACbG,IAAA,CAACP,GAAG,EAACwB,OAAO,CAAC,MAAM,CAACU,mBAAmB,CAAC,gBAAgB,CAAAH,QAAA,CACrDhB,SAAS,CAACoB,GAAG,CAAEZ,KAAK,eACnBhB,IAAA,CAACL,QAAQ,EAEPkC,OAAO,CAAEb,KAAK,GAAKJ,uBAAwB,CAC3CkB,OAAO,CAAEA,CAAA,GAAM,CACbf,WAAW,CAACC,KAAK,CAAC,CACpB,CAAE,CACFe,IAAI,cAAE/B,IAAA,CAACR,UAAU,EAACW,KAAK,CAAE,CAAEa,KAAK,CAAEA,KAAM,CAAE,CAACG,EAAE,CAAEhB,KAAM,CAAE,CAAE,CACzD6B,WAAW,cACThC,IAAA,CAACF,eAAe,EAACK,KAAK,CAAE,CAAEa,KAAK,CAAEA,KAAM,CAAE,CAACG,EAAE,CAAEhB,KAAM,CAAE,CACvD,EARIa,KASN,CACF,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}