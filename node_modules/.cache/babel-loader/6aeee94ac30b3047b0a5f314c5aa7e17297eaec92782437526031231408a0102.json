{"ast":null,"code":"var _jsxFileName = \"/Users/vinodjatav/Desktop/Developement/vinodjatav.github.io/src/Components/LeftPannel/ColorPalettes.tsx\",\n  _s = $RefreshSig$();\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { Box, Typography } from \"@mui/material\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport React from \"react\";\nimport localization from \"../../localization.json\";\nimport { CheckCircleIcon } from \"../../Icons/Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  stroke: \"#ffffff\",\n  strokeWidth: 1,\n  width: \"32px\",\n  height: \"32px\"\n};\nconst colorList = [\"rgba(107, 67, 229, 0.80)\", \"rgba(161, 67, 229, 0.80)\", \"rgba(67, 143, 229, 0.80)\", \"rgba(89, 229, 67, 0.80)\", \"rgba(229, 186, 67, 0.80)\", \"rgba(229, 94, 67, 0.80)\", \"rgba(229, 67, 67, 0.80)\"];\nconst ColorPalettes = props => {\n  _s();\n  const {\n    setSelectedBackground\n  } = props;\n  const [selectedBackgroundColor, setSelectedBackgroundColor] = React.useState(\"rgba(67, 143, 229, 0.80)\");\n  const handleClick = color => {\n    setSelectedBackgroundColor(color);\n    setSelectedBackground(color);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    sx: {\n      background: \"#ffffff15\",\n      textAlign: \"start\",\n      borderRadius: \"16px\",\n      padding: \"24px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        color: \"#fff\",\n        marginLeft: \"16px\"\n      },\n      children: localization[\"set-your-vibes\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      children: colorList.map(color => /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: color === selectedBackgroundColor,\n        onClick: () => {\n          handleClick(color);\n        },\n        icon: /*#__PURE__*/_jsxDEV(CircleIcon, {\n          style: {\n            color: color\n          },\n          sx: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          style: {\n            color: color\n          },\n          sx: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorPalettes, \"SwVqh9qbPsxZ5lFpBNElA1jVuEY=\");\n_c = ColorPalettes;\nexport default ColorPalettes;\nvar _c;\n$RefreshReg$(_c, \"ColorPalettes\");","map":{"version":3,"names":["CircleIcon","Box","Typography","Checkbox","React","localization","CheckCircleIcon","jsxDEV","_jsxDEV","style","stroke","strokeWidth","width","height","colorList","ColorPalettes","props","_s","setSelectedBackground","selectedBackgroundColor","setSelectedBackgroundColor","useState","handleClick","color","display","flexDirection","sx","background","textAlign","borderRadius","padding","children","variant","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","map","checked","onClick","icon","checkedIcon","_c","$RefreshReg$"],"sources":["/Users/vinodjatav/Desktop/Developement/vinodjatav.github.io/src/Components/LeftPannel/ColorPalettes.tsx"],"sourcesContent":["import CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport React from \"react\";\r\nimport localization from \"../../localization.json\";\r\nimport { CheckCircleIcon } from \"../../Icons/Icons\";\r\n\r\nconst style = {\r\n  stroke: \"#ffffff\",\r\n  strokeWidth: 1,\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n};\r\n\r\nconst colorList = [\r\n  \"rgba(107, 67, 229, 0.80)\",\r\n  \"rgba(161, 67, 229, 0.80)\",\r\n  \"rgba(67, 143, 229, 0.80)\",\r\n  \"rgba(89, 229, 67, 0.80)\",\r\n  \"rgba(229, 186, 67, 0.80)\",\r\n  \"rgba(229, 94, 67, 0.80)\",\r\n  \"rgba(229, 67, 67, 0.80)\",\r\n];\r\n\r\ninterface propType {\r\n  setSelectedBackground: Function;\r\n}\r\n\r\nconst ColorPalettes = (props: propType) => {\r\n  const { setSelectedBackground } = props;\r\n  const [selectedBackgroundColor, setSelectedBackgroundColor] =\r\n    React.useState(\"rgba(67, 143, 229, 0.80)\");\r\n\r\n  const handleClick = (color: string) => {\r\n    setSelectedBackgroundColor(color);\r\n    setSelectedBackground(color);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      sx={{\r\n        background: \"#ffffff15\",\r\n        textAlign: \"start\",\r\n        borderRadius: \"16px\",\r\n        padding: \"24px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"body2\" sx={{ color: \"#fff\", marginLeft: \"16px\" }}>\r\n        {localization[\"set-your-vibes\"]}\r\n      </Typography>\r\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(4, 1fr)\">\r\n        {colorList.map((color) => (\r\n          <Checkbox\r\n            key={color}\r\n            checked={color === selectedBackgroundColor}\r\n            onClick={() => {\r\n              handleClick(color);\r\n            }}\r\n            icon={<CircleIcon style={{ color: color }} sx={style} />}\r\n            checkedIcon={\r\n              <CheckCircleIcon style={{ color: color }} sx={style} />\r\n            }\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPalettes;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,4BAA4B;AACnD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,KAAK,GAAG;EACZC,MAAM,EAAE,SAAS;EACjBC,WAAW,EAAE,CAAC;EACdC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB,0BAA0B,EAC1B,0BAA0B,EAC1B,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,yBAAyB,CAC1B;AAMD,MAAMC,aAAa,GAAIC,KAAe,IAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAsB,CAAC,GAAGF,KAAK;EACvC,MAAM,CAACG,uBAAuB,EAAEC,0BAA0B,CAAC,GACzDhB,KAAK,CAACiB,QAAQ,CAAC,0BAA0B,CAAC;EAE5C,MAAMC,WAAW,GAAIC,KAAa,IAAK;IACrCH,0BAA0B,CAACG,KAAK,CAAC;IACjCL,qBAAqB,CAACK,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEf,OAAA,CAACP,GAAG;IACFuB,OAAO,EAAC,MAAM;IACdC,aAAa,EAAC,QAAQ;IACtBC,EAAE,EAAE;MACFC,UAAU,EAAE,WAAW;MACvBC,SAAS,EAAE,OAAO;MAClBC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFvB,OAAA,CAACN,UAAU;MAAC8B,OAAO,EAAC,OAAO;MAACN,EAAE,EAAE;QAAEH,KAAK,EAAE,MAAM;QAAEU,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,EACnE1B,YAAY,CAAC,gBAAgB;IAAC;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACb7B,OAAA,CAACP,GAAG;MAACuB,OAAO,EAAC,MAAM;MAACc,mBAAmB,EAAC,gBAAgB;MAAAP,QAAA,EACrDjB,SAAS,CAACyB,GAAG,CAAEhB,KAAK,iBACnBf,OAAA,CAACL,QAAQ;QAEPqC,OAAO,EAAEjB,KAAK,KAAKJ,uBAAwB;QAC3CsB,OAAO,EAAEA,CAAA,KAAM;UACbnB,WAAW,CAACC,KAAK,CAAC;QACpB,CAAE;QACFmB,IAAI,eAAElC,OAAA,CAACR,UAAU;UAACS,KAAK,EAAE;YAAEc,KAAK,EAAEA;UAAM,CAAE;UAACG,EAAE,EAAEjB;QAAM;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACzDM,WAAW,eACTnC,OAAA,CAACF,eAAe;UAACG,KAAK,EAAE;YAAEc,KAAK,EAAEA;UAAM,CAAE;UAACG,EAAE,EAAEjB;QAAM;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvD,GARId,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCIF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}